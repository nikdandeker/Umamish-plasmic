// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kzQ2m2Ed57Mp6kaUKkBwef
// Component: l9cjixOORjOZM
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: Nfw7f6aDA6Viz_/component
import Footer from "../../Footer"; // plasmic-import: Er8zUyfMaH0uh/component

import { useScreenVariants as useScreenVariantsp7PhKcXg1DklD1 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: p7phKcXg1dklD1/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_beverage_products.module.css"; // plasmic-import: kzQ2m2Ed57Mp6kaUKkBwef/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: l9cjixOORjOZM/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: Jl9dro6J2daDPj/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: XJnBtAsVExuPIN/icon

export type PlasmicHome__VariantMembers = {};

export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  h2?: p.Flex<"h2">;
  columns?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomeProps {}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsp7PhKcXg1DklD1()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__mZksp)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__a0MRa)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___4XzTp)}>
                <div className={classNames(projectcss.all, sty.freeBox__mlzIh)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cdAqo)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qRrSz
                        )}
                      >
                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___1Ekur
                            )}
                          >
                            <h1
                              data-plasmic-name={"h1"}
                              data-plasmic-override={overrides.h1}
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                projectcss.__wab_text,
                                sty.h1
                              )}
                            >
                              {"Enjoy the taste of summer."}
                            </h1>
                          </div>
                        ) : null}
                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___3RKwb
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qz2Wt
                              )}
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt "
                                : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                            </div>
                          </div>
                        ) : null}

                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__oIcJ9
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zhJ9F
                            )}
                          >
                            {"Buy Now"}
                          </div>
                        </Button>
                      </p.Stack>
                    </div>
                  ) : null}

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___1BkPx)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"900px" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/beverage_products/images/image4.jpeg",
                      fullWidth: 4096,
                      fullHeight: 3397,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jcke4)}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__tsa2X)}
                loading={"lazy" as const}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__cyIkt)}
                />
              </div>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__zKZfL)}>
              <h2
                data-plasmic-name={"h2"}
                data-plasmic-override={overrides.h2}
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2
                )}
              >
                {"About"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ih80
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
                }
              </div>
            </div>

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___8L2Nz)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"columns"}
                  data-plasmic-override={overrides.columns}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns)}
                >
                  <div className={classNames(projectcss.all, sty.column__k5JQ)}>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bdkEt)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__xxkdd)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/beverage_products/images/image6.png",
                          fullWidth: 452,
                          fullHeight: 964,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__yYQsw)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__ij21
                        )}
                      >
                        {"Product name"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9B2VI
                        )}
                      >
                        {"$ 8.99"}
                      </div>

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__pb65
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nRbk8
                          )}
                        >
                          {"Buy Now"}
                        </div>
                      </Button>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__unXxp)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zPIrv)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__rkxZu)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/beverage_products/images/image6.png",
                          fullWidth: 452,
                          fullHeight: 964,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__hxmzo)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__akqVr
                        )}
                      >
                        {"Product name"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lWoo0
                        )}
                      >
                        {"$ 8.99"}
                      </div>

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__aWbOj
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8GB6M
                          )}
                        >
                          {"Buy Now"}
                        </div>
                      </Button>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___5QtF9)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dgaz8)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__jmXb2)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/beverage_products/images/image6.png",
                          fullWidth: 452,
                          fullHeight: 964,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ykRyb)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__eBoa
                        )}
                      >
                        {"Product name"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ixvWq
                        )}
                      >
                        {"$ 8.99"}
                      </div>

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__jvrNx
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aSP
                          )}
                        >
                          {"Buy Now"}
                        </div>
                      </Button>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__el5Mg)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__q0YLk)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___4F867)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"158px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/beverage_products/images/image7.png",
                          fullWidth: 818,
                          fullHeight: 1074,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__x4FN)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__icUka
                        )}
                      >
                        {"Product name"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yn2EJ
                        )}
                      >
                        {"$ 8.99"}
                      </div>

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__wRw66
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__y47U
                          )}
                        >
                          {"Buy Now"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </p.Stack>
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__qIyIw)}>
              <div className={classNames(projectcss.all, sty.freeBox__tLmwJ)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fjNhs)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ujyRt)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oKywR)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uJYW
                        )}
                      >
                        {
                          '"A sem a velit consequat a torquent posuere nibh consectetur ac sodales mi vulputate imperdiet suspendisse a adipiscing felis convallis est tristique faucibus condimentum ante viverra."'
                        }
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__x9Btw
                          )}
                        >
                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__a8Ysp
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ynRxC
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__teo9F
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pVfrX
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uDcyU
                            )}
                            role={"img"}
                          />
                        </p.Stack>
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4KbS9
                        )}
                      >
                        {"Jack M."}
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wrzO)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uVrmX)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__g3Ina
                        )}
                      >
                        {
                          '"A sem a velit consequat a torquent posuere nibh consectetur ac sodales mi vulputate imperdiet suspendisse a adipiscing felis convallis est tristique faucibus condimentum ante viverra."'
                        }
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6A9PR
                          )}
                        >
                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ev1W
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__m0VaA
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hVc8Q
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__p3A8U
                            )}
                            role={"img"}
                          />

                          <Icon4Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zMar4
                            )}
                            role={"img"}
                          />
                        </p.Stack>
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__en5M
                        )}
                      >
                        {"Jack M."}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "h1", "h2", "columns", "footer"],
  h1: ["h1"],
  h2: ["h2"],
  columns: ["columns"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  h1: "h1";
  h2: "h2";
  columns: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    h2: makeNodeComponent("h2"),
    columns: makeNodeComponent("columns"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
